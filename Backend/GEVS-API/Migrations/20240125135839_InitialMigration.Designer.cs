// <auto-generated />
using System;
using GEVS_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GEVSAPI4.Migrations
{
    [DbContext(typeof(GevsContext))]
    [Migration("20240125135839_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("GEVS_API.Entities.CandidateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConstituencyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConstituencyId");

                    b.HasIndex("PartyId");

                    b.ToTable("CandidateEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34755256-2c12-4d88-a0ba-5d325850afe1"),
                            ConstituencyId = new Guid("2eb9e977-d88d-4f15-b7a1-49a98be60ef7"),
                            Name = "John Politician",
                            PartyId = new Guid("ec1cd589-3006-46c1-ae7b-f3ef28b758cb")
                        },
                        new
                        {
                            Id = new Guid("d8317768-c9d7-4cf9-af5d-7fe035a04456"),
                            ConstituencyId = new Guid("15afd41c-99f5-4b66-b1f8-12980103c583"),
                            Name = "George Sears",
                            PartyId = new Guid("179c885c-7ffd-4540-a579-2e58a9fb3afe")
                        },
                        new
                        {
                            Id = new Guid("b501397b-49b8-4c4a-805e-d6c1244dcd2a"),
                            ConstituencyId = new Guid("9a876053-f634-40da-94c3-aed77b7c5e64"),
                            Name = "Steven Armstrong",
                            PartyId = new Guid("3baceb86-1e40-4e57-a848-c2a0d83d5d0b")
                        },
                        new
                        {
                            Id = new Guid("25a5f7f5-bac1-4d4a-bd23-dc4a06821933"),
                            ConstituencyId = new Guid("35745314-d6bc-43dd-b108-b1e793126b0a"),
                            Name = "David Oh",
                            PartyId = new Guid("b2f8deab-fcc3-4d66-aa7b-3104d0fe14a1")
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.ConstituencyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ConstituencyEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2eb9e977-d88d-4f15-b7a1-49a98be60ef7"),
                            Name = "Shangri-la-Town"
                        },
                        new
                        {
                            Id = new Guid("15afd41c-99f5-4b66-b1f8-12980103c583"),
                            Name = "Northern-Kunlun-Mountain"
                        },
                        new
                        {
                            Id = new Guid("9a876053-f634-40da-94c3-aed77b7c5e64"),
                            Name = "Western-Shangri-la"
                        },
                        new
                        {
                            Id = new Guid("35745314-d6bc-43dd-b108-b1e793126b0a"),
                            Name = "Naboo-Vallery"
                        },
                        new
                        {
                            Id = new Guid("f9c66b4e-ab57-4bc7-a8e0-632fefcf9842"),
                            Name = "New-Felucia"
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.ElectionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ElectionEntities");
                });

            modelBuilder.Entity("GEVS_API.Entities.PartyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PartyEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec1cd589-3006-46c1-ae7b-f3ef28b758cb"),
                            Name = "Blue Party"
                        },
                        new
                        {
                            Id = new Guid("179c885c-7ffd-4540-a579-2e58a9fb3afe"),
                            Name = "Red Party"
                        },
                        new
                        {
                            Id = new Guid("3baceb86-1e40-4e57-a848-c2a0d83d5d0b"),
                            Name = "Yellow Party"
                        },
                        new
                        {
                            Id = new Guid("b2f8deab-fcc3-4d66-aa7b-3104d0fe14a1"),
                            Name = "Independent"
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RoleEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee137f00-1c56-49e4-83f8-02c336a287d9"),
                            Title = "Voter"
                        },
                        new
                        {
                            Id = new Guid("c8a458ed-01ad-47fe-bdcf-86eb7cc25bb7"),
                            Title = "Admin"
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ConstituencyId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DoB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UvcId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConstituencyId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UvcId");

                    b.ToTable("UserEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edcd167a-2475-47d1-8170-aa5d85879ccb"),
                            ConstituencyId = new Guid("2eb9e977-d88d-4f15-b7a1-49a98be60ef7"),
                            DoB = new DateOnly(2001, 2, 14),
                            Email = "test@outlook.com",
                            Name = "Mason Harniess",
                            Password = "e2j7FuxPvuxwwkfiF/MkUA==.65CSYTZoemoPX4j/Tvf6AFZPqCNYD5u18+8FzF+beKc=",
                            RoleId = new Guid("ee137f00-1c56-49e4-83f8-02c336a287d9"),
                            UvcId = new Guid("44b528dd-2115-4486-8e60-6895dba6414a")
                        },
                        new
                        {
                            Id = new Guid("c8a458ed-01ad-47fe-bdcf-86eb7cc25bb7"),
                            ConstituencyId = new Guid("2eb9e977-d88d-4f15-b7a1-49a98be60ef7"),
                            DoB = new DateOnly(2000, 1, 1),
                            Email = "election@shangrila.gov.sr",
                            Name = "Admin",
                            Password = "LQwOoT/XLdhyDSqVjBvIUw==.3TJQWUGrOpbimn/+IpKp1N76gRXCaC0BRIsMXYiZFsY=",
                            RoleId = new Guid("c8a458ed-01ad-47fe-bdcf-86eb7cc25bb7"),
                            UvcId = new Guid("0b76de0f-fa5d-4900-be02-4d56023d0167")
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.UvcEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("UniqueVoterCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isUsed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UvcEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44b528dd-2115-4486-8e60-6895dba6414a"),
                            UniqueVoterCode = "HH64FWPE",
                            isUsed = true
                        },
                        new
                        {
                            Id = new Guid("f88b83e3-adcd-4288-9c17-27337d3d1eda"),
                            UniqueVoterCode = "BBMNS9ZJ",
                            isUsed = true
                        },
                        new
                        {
                            Id = new Guid("81736bc7-e63f-49e2-94b6-a39002ffd8ee"),
                            UniqueVoterCode = "KYMK9PUH",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("0b76de0f-fa5d-4900-be02-4d56023d0167"),
                            UniqueVoterCode = "WL3K3YPT",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("966b4b19-cf07-4f39-8491-42acfe969de6"),
                            UniqueVoterCode = "JA9WCMAS",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("257edd96-5b41-4040-a551-6982c59b4be0"),
                            UniqueVoterCode = "Z93G7PN9",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("853b8de3-37ec-40d3-9219-6b0c2b171711"),
                            UniqueVoterCode = "WPC5GEHA",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("faa3b32f-99a0-4482-83ab-5a28492f057c"),
                            UniqueVoterCode = "RXLNLTA6",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("da7beb0a-bf9b-4cd7-9a9e-88e2e39ed22a"),
                            UniqueVoterCode = "7XUFD78Y",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("d10ee694-1e75-499e-95ab-82b4df0c9d1b"),
                            UniqueVoterCode = "DBP4GQBQ",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("be871292-398c-45eb-bd88-53e0b335f2a7"),
                            UniqueVoterCode = "ZSRBTK9S",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("22495351-1b44-4df4-a48c-b6993ba3b495"),
                            UniqueVoterCode = "B7DMPWCQ",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("34d8bb09-65d8-49c7-8794-0cf4cfdd4f65"),
                            UniqueVoterCode = "YADA47RL",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("07cb227e-8421-454d-a8a7-86c1e6527638"),
                            UniqueVoterCode = "9GTZQNKB",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("c5988e26-76ac-4c58-a89f-d5b11174be5b"),
                            UniqueVoterCode = "KSM9NB5L",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("04817f32-d32c-4450-814f-174733dd3dd3"),
                            UniqueVoterCode = "BQCRWTSG",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("6dd0f28a-d743-4644-a008-1126afa9f246"),
                            UniqueVoterCode = "ML5NSKKG",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("439e7f57-3734-40e4-83d2-5435cf64804e"),
                            UniqueVoterCode = "D5BG6FDH",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("e2192b4f-bd52-43ca-a4d1-3ac3a46f5dd1"),
                            UniqueVoterCode = "2LJFM6PM",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("4d9d80ec-6bc6-4281-a8cb-7c824aefbb5e"),
                            UniqueVoterCode = "38NWLPY3",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("2b6b4548-625c-4f78-a8d9-4ee6d13803e6"),
                            UniqueVoterCode = "2TEHRTHJ",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("7937cf6d-9922-4056-ba77-d1d8ff5e8b2c"),
                            UniqueVoterCode = "G994LD9T",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("a4c568d0-b386-497f-af9a-0171f2eb2ef4"),
                            UniqueVoterCode = "Q452KVQE",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("824112f6-36a8-4ded-8f65-f9ee8715a731"),
                            UniqueVoterCode = "75NKUXAH",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("79ef12c5-6bb9-475e-9db0-e1b28cb3febb"),
                            UniqueVoterCode = "DHKVCU8T",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("96d52486-ebe6-4b82-b809-d49fe270c23f"),
                            UniqueVoterCode = "TH9A6HUB",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("fcd119f4-4e2b-4b65-8e2d-d0dcff5c8aed"),
                            UniqueVoterCode = "2E5BHT5R",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("766c8f47-7e91-4ba2-a18a-0c163cd3b51d"),
                            UniqueVoterCode = "556JTA32",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("f5ead772-d949-420e-8829-81237deb23c6"),
                            UniqueVoterCode = "LUFKZAHW",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("d2f0e1d6-4283-407e-9e2f-3006b5e28b9b"),
                            UniqueVoterCode = "DBAD57ZR",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("bf37aa40-95a8-40ea-ab1d-0d9500f60698"),
                            UniqueVoterCode = "K96JNSXY",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("5b533fd2-12bf-4918-bd27-d560b002fd42"),
                            UniqueVoterCode = "PFXB8QXM",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("9f3932f9-ba1a-4bf8-8fe3-37431ae2d2a2"),
                            UniqueVoterCode = "8TEXF2HD",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("7544cabc-778c-4187-9010-e20057addeee"),
                            UniqueVoterCode = "N6HBFD2X",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("a542c00d-53c0-4652-9711-acf5bfd3a7a3"),
                            UniqueVoterCode = "K3EVS3NM",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("d3cf2421-da33-4136-887f-212931291022"),
                            UniqueVoterCode = "5492AC6V",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("9bf2eab4-3c03-4b34-b9c6-2054831b00c9"),
                            UniqueVoterCode = "U5LGC65X",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("519bb968-8239-40d3-9f5e-002fb6ecb919"),
                            UniqueVoterCode = "BKMKJN5S",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("19bebef6-a7eb-4ba5-8497-1093624f92ea"),
                            UniqueVoterCode = "JF2QD3UF",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("75a26b60-09aa-4583-a2bb-f04904725d6e"),
                            UniqueVoterCode = "NW9ETHS7",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("f56bbfc8-a1e0-43b0-8083-417f3731cc37"),
                            UniqueVoterCode = "VFBH8W6W",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("ed827ba2-6aea-42d9-8edf-66a79b55d3f8"),
                            UniqueVoterCode = "7983XU4M",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("eab693c2-6c5c-4ca0-8b59-1d4ec36e8d2e"),
                            UniqueVoterCode = "2GYDT5D3",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("855b9499-f465-406c-b4fa-714cd7be80a0"),
                            UniqueVoterCode = "LVTFN8G5",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("114c1808-61eb-4a8e-a85d-2edc89fb8560"),
                            UniqueVoterCode = "UNP4A5T7",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("0d0a2d55-2a26-4df1-9be3-93845cb9b6d9"),
                            UniqueVoterCode = "UMT3RLVS",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("629d1c3a-dfcb-47b6-8147-8999643807a1"),
                            UniqueVoterCode = "TZZZCJV8",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("0dbfa013-0c64-46a3-9931-d6356fed73e6"),
                            UniqueVoterCode = "UVE5M7FR",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("2e00c994-01be-4c24-a57f-e8aaebcb81d2"),
                            UniqueVoterCode = "W44QP7XJ",
                            isUsed = false
                        },
                        new
                        {
                            Id = new Guid("c4aee7a7-6b10-4f8f-b238-7c1931058d92"),
                            UniqueVoterCode = "9FCV9RMT",
                            isUsed = false
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.VoteEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("UserId");

                    b.ToTable("VoteEntities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322cdb1f-2396-4f47-8ae2-188e067f315b"),
                            CandidateId = new Guid("34755256-2c12-4d88-a0ba-5d325850afe1"),
                            UserId = new Guid("edcd167a-2475-47d1-8170-aa5d85879ccb")
                        });
                });

            modelBuilder.Entity("GEVS_API.Entities.CandidateEntity", b =>
                {
                    b.HasOne("GEVS_API.Entities.ConstituencyEntity", "Constituency")
                        .WithMany("Candidates")
                        .HasForeignKey("ConstituencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GEVS_API.Entities.PartyEntity", "Party")
                        .WithMany("Candidates")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constituency");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("GEVS_API.Entities.UserEntity", b =>
                {
                    b.HasOne("GEVS_API.Entities.ConstituencyEntity", "Constituency")
                        .WithMany()
                        .HasForeignKey("ConstituencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GEVS_API.Entities.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GEVS_API.Entities.UvcEntity", "Uvc")
                        .WithMany()
                        .HasForeignKey("UvcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Constituency");

                    b.Navigation("Role");

                    b.Navigation("Uvc");
                });

            modelBuilder.Entity("GEVS_API.Entities.VoteEntity", b =>
                {
                    b.HasOne("GEVS_API.Entities.CandidateEntity", "Candidate")
                        .WithMany("Votes")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GEVS_API.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GEVS_API.Entities.CandidateEntity", b =>
                {
                    b.Navigation("Votes");
                });

            modelBuilder.Entity("GEVS_API.Entities.ConstituencyEntity", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("GEVS_API.Entities.PartyEntity", b =>
                {
                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
